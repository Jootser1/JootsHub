// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Auth {
  id           String   @id @default(cuid())
  email        String   @unique
  password     String
  accessToken  String?
  refreshToken String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
  userId       String   @unique
}

model User {
  id        String   @id @default(cuid())
  avatar    String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  auth      Auth?
  userNumber  Int       @unique @default(autoincrement())
  username  String    @unique
  isOnline  Boolean     @default(false) // Ajout de l'état de connexion
  isAvailableForChat Boolean @default(true) // Préférence pour recevoir des invitations de chat
  sentMessages     Message[] @relation("SentMessages")
  initiatedConversations Conversation[] @relation("InitiatedConversations")
  receivedConversations Conversation[] @relation("ReceivedConversations")
}

model Message {
  id        String   @id @default(uuid())
  senderId  String
  content   String
  createdAt DateTime @default(now())
  isRead    Boolean  @default(false)
  conversationId String
  conversation Conversation @relation(fields: [conversationId], references: [id])
  sender    User     @relation("SentMessages", fields: [senderId], references: [id])

  @@index([conversationId])
  @@index([senderId])
}

model Conversation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  initiatorId String
  receiverId String
  messages  Message[]
  initiator User     @relation("InitiatedConversations", fields: [initiatorId], references: [id])
  receiver  User     @relation("ReceivedConversations", fields: [receiverId], references: [id])

  @@unique([initiatorId, receiverId])
}

